from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, Update
from telegram.ext import CallbackContext, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from analysis import get_top_signal
from tracking import start_tracking, stop_all_trackings
from utils import reset_cache
from config import OWNER_ID

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start_command_handler(update: Update, context: CallbackContext):
    inline_keyboard = [
        [InlineKeyboardButton("üìà –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data="get_signal")],
        [InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è", callback_data="stop_tracking")]
    ]
    reply_markup_inline = InlineKeyboardMarkup(inline_keyboard)

    reply_keyboard = [
        [KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª")],
        [KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è")],
        [KeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å –∫–µ—à")]
    ]
    reply_markup_panel = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—É—é –∂–∏–∑–Ω—å, –ö–æ—Ä–±–∞–Ω!",
        reply_markup=reply_markup_inline
    )
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup_panel
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
async def button_callback_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    if query.data == "get_signal":
        signal = await get_top_signal()
        if signal:
            message = (
                f"–ú–æ–Ω–µ—Ç–∞: *{signal['symbol']}*\n"
                f"–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: *{signal['entry_price']}* $\n"
                f"–¶–µ–ª—å +5%: *{signal['target_price']}* $\n"
                f"–°—Ç–æ–ø-–ª–æ—Å—Å: *{signal['stop_loss']}* $\n"
                f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: *{signal['change_24h']}%*\n"
                f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞: *{signal['probability']}%*"
            )
            button = InlineKeyboardMarkup([
                [InlineKeyboardButton("üëÅ –°–ª–µ–¥–∏—Ç—å –∑–∞ –º–æ–Ω–µ—Ç–æ–π", callback_data=f"track_{signal['symbol']}")]
            ])
            await query.message.reply_text(message, reply_markup=button, parse_mode="Markdown")
        else:
            await query.message.reply_text("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

    elif query.data == "stop_tracking":
        stop_all_trackings()
        await query.message.reply_text("‚õîÔ∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")

    elif query.data.startswith("track_"):
        symbol = query.data.replace("track_", "")
        start_tracking(symbol)
        await query.message.reply_text(f"üîî –¢–µ–ø–µ—Ä—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –º–æ–Ω–µ—Ç—É *{symbol}*", parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ reply-–∫–Ω–æ–ø–æ–∫ –≤ –ø–∞–Ω–µ–ª–∏
async def message_handler(update: Update, context: CallbackContext):
    text = update.message.text.strip().lower()

    if "–ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª" in text:
        signal = await get_top_signal()
        if signal:
            message = (
                f"–ú–æ–Ω–µ—Ç–∞: *{signal['symbol']}*\n"
                f"–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: *{signal['entry_price']}* $\n"
                f"–¶–µ–ª—å +5%: *{signal['target_price']}* $\n"
                f"–°—Ç–æ–ø-–ª–æ—Å—Å: *{signal['stop_loss']}* $\n"
                f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: *{signal['change_24h']}%*\n"
                f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞: *{signal['probability']}%*"
            )
            button = InlineKeyboardMarkup([
                [InlineKeyboardButton("üëÅ –°–ª–µ–¥–∏—Ç—å –∑–∞ –º–æ–Ω–µ—Ç–æ–π", callback_data=f"track_{signal['symbol']}")]
            ])
            await update.message.reply_text(message, reply_markup=button, parse_mode="Markdown")
        else:
            await update.message.reply_text("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

    elif "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" in text:
        stop_all_trackings()
        await update.message.reply_text("‚õîÔ∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")

    elif "—Å–±—Ä–æ—Å–∏—Ç—å –∫–µ—à" in text:
        reset_cache()
        await update.message.reply_text("‚ôªÔ∏è –ö–µ—à —Å–±—Ä–æ—à–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª.")

# –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
start_handler = CommandHandler("start", start_command_handler)
button_handler = CallbackQueryHandler(button_callback_handler)
