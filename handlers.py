from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from analysis import get_top_signal
from tracking import start_tracking, stop_all_trackings
import os

keyboard = [
    [InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data="get_signal")],
    [InlineKeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å –∫–µ—à", callback_data="reset_cache")],
    [InlineKeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è", callback_data="stop_tracking")]
]
markup = InlineKeyboardMarkup(keyboard)


async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—É—é –∂–∏–∑–Ω—å, –ö–æ—Ä–±–∞–Ω!",
        reply_markup=markup
    )


async def text_message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.",
        reply_markup=markup
    )


async def button_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "get_signal":
        signal = await get_top_signal()
        if signal:
            await query.edit_message_text(signal, reply_markup=markup, parse_mode="MarkdownV2")
        else:
            await query.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–¥—ë–∂–Ω—ã–π —Å–∏–≥–Ω–∞–ª.", reply_markup=markup)

    elif query.data == "reset_cache":
        await reset_cache_handler(update, context)

    elif query.data == "stop_tracking":
        await stop_all_trackings()
        await query.edit_message_text("‚õîÔ∏è –í—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.", reply_markup=markup)


async def reset_cache_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        os.remove("indicators_cache.json")
        await update.callback_query.edit_message_text("üßπ –ö–µ—à —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω.", reply_markup=markup)
    except FileNotFoundError:
        await update.callback_query.edit_message_text("üßπ –ö–µ—à —É–∂–µ –ø—É—Å—Ç.", reply_markup=markup)
