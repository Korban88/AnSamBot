from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
from utils import send_signal_message, reset_cache
from tracking import start_tracking, stop_all_trackings
from config import tracked_symbols

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [['üìà –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª'], ['‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è'], ['üîÅ –°–±—Ä–æ—Å–∏—Ç—å –∫–µ—à']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AnSam Bot", reply_markup=reply_markup)

start_handler = CommandHandler("start", start)

# Inline –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data.startswith("track_"):
        symbol = query.data.replace("track_", "")
        if symbol in tracked_symbols:
            await start_tracking(context, query.message.chat_id, symbol)
            await query.edit_message_reply_markup(reply_markup=None)
            await query.message.reply_text(f"‚è± –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ {symbol} –∑–∞–ø—É—â–µ–Ω–æ.")
        else:
            await query.message.reply_text("–ú–æ–Ω–µ—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.")
    elif query.data == "stop_all":
        await stop_all_trackings()
        await query.message.reply_text("üõë –í—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

button_handler = CallbackQueryHandler(button_callback)

# Reply –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip().lower()

    if "–ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª" in text:
        await send_signal_message(update.message.chat_id, context)
    elif "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" in text:
        await stop_all_trackings()
        await update.message.reply_text("üõë –í—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
    elif "—Å–±—Ä–æ—Å–∏—Ç—å –∫–µ—à" in text:
        reset_cache()
        await update.message.reply_text("‚ôªÔ∏è –ö–µ—à —Å–±—Ä–æ—à–µ–Ω.")
    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥.")

message_handler = MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message)
