import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils import executor
from config import BOT_TOKEN

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN, parse_mode="Markdown")
dp = Dispatcher(bot)

# –ü—Ä–æ—Å—Ç–æ–π inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–π –±–ª–æ–∫
keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add("üöÄ –ü–æ–ª—É—á–∏—Ç—å –µ—â—ë —Å–∏–≥–Ω–∞–ª", "üü¢ –°—Ç–∞—Ä—Ç")

@dp.message_handler(commands=["start"])
async def cmd_start(message: types.Message):
    await message.answer("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "üü¢ –°—Ç–∞—Ä—Ç")
async def start_message(message: types.Message):
    await message.answer("–¢—ã –Ω–∞–∂–∞–ª –°—Ç–∞—Ä—Ç")

@dp.message_handler(lambda message: message.text == "üöÄ –ü–æ–ª—É—á–∏—Ç—å –µ—â—ë —Å–∏–≥–Ω–∞–ª")
async def signal_message(message: types.Message):
    await message.answer("–¢—ã –∑–∞–ø—Ä–æ—Å–∏–ª —Å–∏–≥–Ω–∞–ª")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False)
