import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from config import TELEGRAM_TOKEN, OWNER_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if TELEGRAM_TOKEN == "8148906065:AAEw8yAPKnhjw3AK2tsYEo-h9LVj74xJS4c":
    logger.warning("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback-–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ç–æ–∫–µ–Ω–∞!")
else:
    logger.info("‚úÖ –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

if OWNER_ID == "347552741":
    logger.warning("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback-–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è OWNER_ID!")
else:
    logger.info("‚úÖ OWNER_ID –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot, storage=MemoryStorage())

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        await message.reply(
            f"ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!\n"
            f"ID –≤–ª–∞–¥–µ–ª—å—Ü–∞: {OWNER_ID}\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è {'fallback' if TELEGRAM_TOKEN == '8148906065:AAEw8yAPKnhjw3AK2tsYEo-h9LVj74xJS4c' else 'Railway'} —Ç–æ–∫–µ–Ω"
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {e}")

@dp.message_handler(commands=['env'])
async def show_env(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    await message.reply(
        f"–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:\n"
        f"–¢–æ–∫–µ–Ω: {'fallback' if TELEGRAM_TOKEN == '8148906065:AAEw8yAPKnhjw3AK2tsYEo-h9LVj74xJS4c' else 'Railway'}\n"
        f"OWNER_ID: {OWNER_ID}\n"
        f"–ò—Å—Ç–æ—á–Ω–∏–∫: {'–∫–æ–¥' if OWNER_ID == '347552741' else 'Railway'}"
    )

@dp.message_handler(commands=['ping'])
async def ping(message: types.Message):
    """Health-check"""
    await message.reply("üèì Pong! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ")
    logger.info(f"Health-check –æ—Ç {message.from_user.id}")

async def on_startup(dp):
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    try:
        await bot.send_message(OWNER_ID, "üü¢ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        logger.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–ª–∞–¥–µ–ª—å—Ü—É")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

if __name__ == '__main__':
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        executor.start_polling(
            dp,
            on_startup=on_startup,
            skip_updates=True,
            timeout=60,
            relax=0.5
        )
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logger.warning("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
