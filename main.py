# main.py ‚Äî –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ Railway, –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ asyncio

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from config import TELEGRAM_BOT_TOKEN, OWNER_ID
from analysis import analyze_cryptos
from tracking import start_tracking_coin, stop_all_tracking

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—É—é –∂–∏–∑–Ω—å, –ö–æ—Ä–±–∞–Ω!")
    await send_signal(update, context)

# –ö–Ω–æ–ø–∫–∞
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data.startswith("track_"):
        coin_id = query.data.split("_")[1]
        await start_tracking_coin(coin_id, context)
        await query.edit_message_text(f"üîî –¢–µ–ø–µ—Ä—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º {coin_id}")
    elif query.data == "stop_all":
        await stop_all_tracking(context)
        await query.edit_message_text("‚õîÔ∏è –í—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

# –°–∏–≥–Ω–∞–ª
async def send_signal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    result = analyze_cryptos()
    if not result:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–æ–Ω–µ—Ç –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞.")
        return

    coin = result[0]
    text = (
        f"*üü¢ –°–∏–≥–Ω–∞–ª –Ω–∞ —Ä–æ—Å—Ç: {coin['id'].capitalize()}*
"
        f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {coin['price']}\n"
        f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞: {coin['probability']}%\n"
    )

    keyboard = [
        [InlineKeyboardButton(f"–°–ª–µ–¥–∏—Ç—å –∑–∞ {coin['id']}", callback_data=f"track_{coin['id']}")],
        [InlineKeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ", callback_data="stop_all")]
    ]

    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode="Markdown")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
