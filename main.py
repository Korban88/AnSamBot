import asyncio
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from handlers import start_handler, button_handler, message_handler
from utils import schedule_daily_signal_check, debug_cache_message, debug_analysis_message
from config import TELEGRAM_BOT_TOKEN, OWNER_ID
from telegram import ReplyKeyboardMarkup


reply_keyboard = ReplyKeyboardMarkup([
    ["üìà –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª"],
    ["‚ôªÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –∫–µ—à"],
    ["‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"],
    ["üì¶ –ö–µ—à —Å–∏–≥–Ω–∞–ª–æ–≤"],
    ["üìä –ê–Ω–∞–ª–∏–∑ –º–æ–Ω–µ—Ç"]
], resize_keyboard=True)

async def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start_handler))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), message_handler))

    # reply –∫–Ω–æ–ø–∫–∏
    async def reply_panel(update, context):
        text = update.message.text
        if text == "üìà –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª":
            from utils import send_signal_message
            await send_signal_message(update.effective_chat.id, context)
        elif text == "‚ôªÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –∫–µ—à":
            from utils import reset_cache
            reset_cache()
            await context.bot.send_message(chat_id=update.effective_chat.id, text="‚úÖ –ö–µ—à —Å–±—Ä–æ—à–µ–Ω.")
        elif text == "‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è":
            from tracking import stop_all_trackers
            await stop_all_trackers(update.effective_chat.id)
        elif text == "üì¶ –ö–µ—à —Å–∏–≥–Ω–∞–ª–æ–≤":
            await debug_cache_message(update.effective_chat.id, context)
        elif text == "üìä –ê–Ω–∞–ª–∏–∑ –º–æ–Ω–µ—Ç":
            await debug_analysis_message(update.effective_chat.id, context)

    app.add_handler(MessageHandler(filters.TEXT, reply_panel))

    schedule_daily_signal_check(app, OWNER_ID)

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
