from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏–Ω–¥–µ–∫—Å–æ–≤ —Ç–æ–ø-–º–æ–Ω–µ—Ç –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
user_signal_index = {}

def reset_signal_index(user_id: int):
    """–°–±—Ä–æ—Å–∏—Ç—å –∏–Ω–¥–µ–∫—Å –º–æ–Ω–µ—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_signal_index[user_id] = 0

def get_next_signal_message(user_id: int, top_cryptos: list) -> dict | None:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–≥–Ω–∞–ª –∏–∑ top-3 –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    index = user_signal_index.get(user_id, 0)

    if index >= len(top_cryptos):
        return None

    coin = top_cryptos[index]
    user_signal_index[user_id] = index + 1

    text = (
        f"*–ú–æ–Ω–µ—Ç–∞:* `{coin['name']}` \\(`{coin['symbol'].upper()}`\\)\n"
        f"*–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞:* `${coin['entry_price']}`\n"
        f"*–¶–µ–ª—å \\( +5% \\):* `${coin['target_price']}`\n"
        f"*–°—Ç–æ–ø\\-–ª–æ—Å—Å:* `${coin['stop_loss']}`\n"
        f"*–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞:* `{coin['growth_probability']}%`\n"
        f"\n"
        f"_RSI:_ `{coin['rsi']}` | _MA:_ `{coin.get('ma', 'N/A')}` | _–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á:_ `{coin['change_24h']}%`"
    )

    keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("üìä –°–ª–µ–¥–∏—Ç—å –∑–∞ –º–æ–Ω–µ—Ç–æ–π", callback_data=f"track_{coin['id']}")
    )

    return {
        "text": text,
        "keyboard": keyboard
    }
