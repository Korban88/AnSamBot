import asyncio
import time
from collections import defaultdict
from crypto_utils import get_current_price
from config import OWNER_ID

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞: user_id -> list of dicts with coin_id, start_price, start_time
active_trackings = defaultdict(list)

CHECK_INTERVAL = 600  # 10 –º–∏–Ω—É—Ç
TIMEOUT = 12 * 3600  # 12 —á–∞—Å–æ–≤

bot = None  # –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑–≤–Ω–µ —á–µ—Ä–µ–∑ set_bot_instance()


def set_bot_instance(bot_instance):
    global bot
    bot = bot_instance


def start_tracking_coin(coin_id, user_id, start_price):
    active_trackings[user_id].append({
        "coin_id": coin_id,
        "start_price": start_price,
        "start_time": time.time()
    })


def stop_all_tracking(user_id):
    active_trackings[user_id] = []


async def tracking_loop():
    while True:
        for user_id, coins in list(active_trackings.items()):
            updated_coins = []
            for coin in coins:
                coin_id = coin["coin_id"]
                start_price = coin["start_price"]
                start_time = coin["start_time"]
                current_price = get_current_price(coin_id)

                if current_price is None:
                    updated_coins.append(coin)
                    continue

                change_pct = ((current_price - start_price) / start_price) * 100

                if change_pct >= 5:
                    await bot.send_message(user_id,
                        f"üöÄ –ú–æ–Ω–µ—Ç–∞ *{coin_id}* –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ +5%!\n"
                        f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: *{current_price:.4f}* USD",
                        parse_mode="Markdown")
                    continue

                elif change_pct >= 3.5:
                    await bot.send_message(user_id,
                        f"üîî –ú–æ–Ω–µ—Ç–∞ *{coin_id}* –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –∫ —Ü–µ–ª–∏:\n"
                        f"–†–æ—Å—Ç —É–∂–µ —Å–æ—Å—Ç–∞–≤–∏–ª *{change_pct:.2f}%*",
                        parse_mode="Markdown")

                elif time.time() - start_time > TIMEOUT:
                    await bot.send_message(user_id,
                        f"‚è± –ú–æ–Ω–µ—Ç–∞ *{coin_id}* –æ—Ç—Å–ª–µ–∂–∏–≤–∞–ª–∞—Å—å 12 —á–∞—Å–æ–≤.\n"
                        f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã: *{change_pct:.2f}%*\n"
                        f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: *{current_price:.4f}* USD",
                        parse_mode="Markdown")
                    continue

                updated_coins.append(coin)

            active_trackings[user_id] = updated_coins

        await asyncio.sleep(CHECK_INTERVAL)
